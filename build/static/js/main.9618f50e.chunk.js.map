{"version":3,"sources":["components/Screen/Screen.js","components/Buttons/Buttons.js","util/mCalculate.js","App.js","reportWebVitals.js","index.js"],"names":["Screen","this","props","screen","story","classname","className","Component","Buttons","name","onClick","e","target","mCalculate","number","toFixed","block","done","safeCount","minIndex","divProce","pluProce","charArray","split","length","Error","mulIndex","indexOf","divIndex","splice","parseFloat","pluIndex","iLoveJavascript","string","maxIndex","newBlock","i","slice","join","calculateBlock","util","instance","App","button","calculate","clear","backspace","isOperator","state","setState","result","toString","calc","isNaN","error","replace","char","includes","value","displayCalc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9618f50e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Screen extends Component {\r\n\r\n    render() {\r\n\r\n        let {screen,story,classname} = this.props;\r\n\r\n        return (\r\n            <div className={classname}>\r\n                <div className=\"err\">ERR</div>\r\n                <div className=\"story\">{story}</div>\r\n                <div className=\"value\">{screen}</div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Screen;\r\n","import React, {Component} from 'react';\r\n\r\nclass Buttons extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"buttons\">\r\n                <div className=\"row\">\r\n                    <button className=\"offcolor\" name=\"(\" onClick={e => this.props.onClick(e.target.name)}>(</button>\r\n                    <button className=\"offcolor\" name=\")\" onClick={e => this.props.onClick(e.target.name)}>)</button>\r\n                    <button className=\"offcolor\" name=\"C\" onClick={e => this.props.onClick(e.target.name)}>C</button>\r\n                    <button className=\"offcolor\" name=\"B\" onClick={e => this.props.onClick(e.target.name)}>←</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button name=\"7\" onClick={e => this.props.onClick(e.target.name)}>7</button>\r\n                    <button name=\"8\" onClick={e => this.props.onClick(e.target.name)}>8</button>\r\n                    <button name=\"9\" onClick={e => this.props.onClick(e.target.name)}>9</button>\r\n                    <button className=\"offcolor\" name=\"/\" onClick={e => this.props.onClick(e.target.name)}>÷</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button name=\"4\" onClick={e => this.props.onClick(e.target.name)}>4</button>\r\n                    <button name=\"5\" onClick={e => this.props.onClick(e.target.name)}>5</button>\r\n                    <button name=\"6\" onClick={e => this.props.onClick(e.target.name)}>6</button>\r\n                    <button className=\"offcolor\" name=\"*\" onClick={e => this.props.onClick(e.target.name)}>x</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button name=\"1\" onClick={e => this.props.onClick(e.target.name)}>1</button>\r\n                    <button name=\"2\" onClick={e => this.props.onClick(e.target.name)}>2</button>\r\n                    <button name=\"3\" onClick={e => this.props.onClick(e.target.name)}>3</button>\r\n                    <button className=\"offcolor\" name=\"+\" onClick={e => this.props.onClick(e.target.name)}>+</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <button className=\"offcolor\" name=\".\" onClick={e => this.props.onClick(e.target.name)}>.</button>\r\n                    <button name=\"0\" onClick={e => this.props.onClick(e.target.name)}>0</button>\r\n                    <button className=\"offcolor\" name=\"-\" onClick={e => this.props.onClick(e.target.name)}>-</button>\r\n                    <button className=\"accent\" name=\"=\" onClick={e => this.props.onClick(e.target.name)}>=</button>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Buttons;\r\n","export default class mCalculate {\r\n\r\n    static util = mCalculate.instance || new mCalculate()\r\n\r\n    iLoveJavascript(number) {\r\n\r\n        const decimalPlaces = 2;\r\n        return number.toFixed(decimalPlaces) / 1;\r\n\r\n    }\r\n\r\n    calculateBlock(block) {\r\n\r\n        let charArray = block.split(\" \");\r\n        let done, safeCount, minIndex, mulIndex, divIndex, divProce, pluProce;\r\n        const safeCountMax = 1000;\r\n\r\n        if (charArray.length === 1) {\r\n\r\n            return block;\r\n\r\n        }\r\n\r\n        done = false;\r\n        safeCount = 0;\r\n        while (!done) {\r\n\r\n            if (safeCount++ && safeCount > safeCountMax) {\r\n\r\n                throw new Error();\r\n\r\n            }\r\n\r\n            let mulIndex = charArray.indexOf(\"*\");\r\n            let divIndex = charArray.indexOf(\"/\");\r\n\r\n            if (mulIndex >= 0 || divIndex >= 0) {\r\n\r\n                if (mulIndex >= 0) {\r\n\r\n                    if (divIndex >= 0 && divIndex < mulIndex) {\r\n\r\n                        minIndex = divIndex;\r\n                        divProce = true;\r\n\r\n                    } else {\r\n\r\n                        minIndex = mulIndex;\r\n                        divProce = false;\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    minIndex = divIndex;\r\n                    divProce = true;\r\n\r\n                }\r\n\r\n                if (divProce) {\r\n\r\n                    if (charArray[minIndex + 1] === \"0\") {\r\n\r\n                        throw new Error();\r\n\r\n                    }\r\n\r\n                    charArray.splice(minIndex - 1, 3, parseFloat(charArray[minIndex - 1]) / parseFloat(charArray[minIndex + 1]));\r\n\r\n                } else {\r\n\r\n                    charArray.splice(minIndex - 1, 3, parseFloat(charArray[minIndex - 1]) * parseFloat(charArray[minIndex + 1]));\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                done = true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        done = false;\r\n        safeCount = 0;\r\n        while (!done) {\r\n\r\n            if (safeCount++ && safeCount > safeCountMax) {\r\n\r\n                throw new Error();\r\n\r\n            }\r\n\r\n            let minIndex = charArray.indexOf(\"-\");\r\n            let pluIndex = charArray.indexOf(\"+\");\r\n\r\n            if (minIndex >= 0 || pluIndex >= 0) {\r\n\r\n                if (minIndex >= 0) {\r\n\r\n                    if (pluIndex >= 0 && pluIndex < minIndex) {\r\n\r\n                        minIndex = pluIndex;\r\n                        pluProce = true;\r\n\r\n                    } else {\r\n\r\n                        minIndex = minIndex;\r\n                        pluProce = false;\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    minIndex = pluIndex;\r\n                    pluProce = true;\r\n\r\n                }\r\n\r\n                if (pluProce) {\r\n\r\n                    charArray.splice(minIndex - 1, 3, parseFloat(charArray[minIndex - 1]) + parseFloat(charArray[minIndex + 1]));\r\n\r\n                } else {\r\n\r\n                    charArray.splice(minIndex - 1, 3, parseFloat(charArray[minIndex - 1]) - parseFloat(charArray[minIndex + 1]));\r\n\r\n                }\r\n\r\n\r\n            } else {\r\n\r\n                done = true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return this.iLoveJavascript(charArray[0]);\r\n\r\n    }\r\n\r\n    calc(string) {\r\n\r\n        let charArray = string.split(\" \");\r\n        let done, safeCount, minIndex, maxIndex, newBlock;\r\n        const safeCountMax = 1000;\r\n\r\n        if (charArray.length === 1) {\r\n\r\n            return string;\r\n\r\n        }\r\n\r\n        done = false;\r\n        safeCount = 0;\r\n        while (!done) {\r\n\r\n            if (safeCount++ && safeCount > safeCountMax) {\r\n\r\n                throw new Error();\r\n\r\n            }\r\n\r\n            let minIndex = charArray.indexOf(\"(\");\r\n            if (minIndex >= 0) {\r\n\r\n                if ((minIndex === charArray.length - 1) || (charArray.indexOf(\")\") < minIndex)) {\r\n\r\n                    throw new Error();\r\n\r\n                }\r\n\r\n                minIndex++;\r\n\r\n                for (var i = minIndex + 1; i < charArray.length; i++) {\r\n\r\n                    maxIndex = i;\r\n\r\n                    if (charArray[i] === '(') {\r\n\r\n                        minIndex = i;\r\n\r\n                    }\r\n\r\n                    if (charArray[i] === ')') {\r\n\r\n                        break;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                newBlock = charArray.slice(minIndex, maxIndex).join(\" \");\r\n                charArray.splice(minIndex - 1, (maxIndex - minIndex) + 2, this.calculateBlock(newBlock));\r\n\r\n            } else {\r\n\r\n                done = true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return this.calculateBlock(charArray.join(\" \"));\r\n\r\n    }\r\n\r\n}\r\n","import React, { Component } from 'react';\n\nimport Screen from \"./components/Screen\";\nimport Buttons from \"./components/Buttons\";\nimport mCalculate from \"./util/mCalculate.js\";\n\nclass App extends Component {\n\n    constructor(){\n\n        super();\n        this.state = {\n            error: false,\n            result: false,\n            screen: \"\",\n            story: \"\"\n        }\n\n    }\n\n    displayCalc(string) {\n\n        if (string === '') {\n\n            return \"0\";\n\n        }\n\n        return string.replace(\"( \", \"(\").replace(\" )\", \")\");\n\n    }\n\n    isOperator(char) {\n\n        const operators = [\"(\", \")\", \"-\", \"+\", \"/\", \"*\"];\n\n        if (operators.includes(char)) {\n\n            return true;\n\n        }\n\n        return false;\n\n    }\n\n    onClick = button => {\n\n        if (button === \"=\") {\n\n            this.calculate()\n\n        }\n\n        else if (button === \"C\") {\n\n            this.clear()\n\n        }\n\n        else if (button === \"B\") {\n\n            this.backspace()\n\n        }\n\n        else {\n\n            if (this.isOperator(button)) {\n\n                if (this.state.screen.length === 0) {\n\n                    this.setState({\n                        result: false,\n                        screen: this.state.screen + button.toString()\n                    });\n\n                } else {\n\n                    this.setState({\n                        result: false,\n                        screen: this.state.screen + \" \" + button.toString()\n                    });\n\n                }\n\n            } else {\n\n                if (this.isOperator(this.state.screen[this.state.screen.length - 1])) {\n\n                    this.setState({\n                        result: false,\n                        screen: this.state.screen + \" \" + button.toString()\n                    });\n\n                } else {\n\n                    if (this.state.result) {\n\n                        this.setState({\n                            result: false,\n                            screen: button.toString()\n                        });\n\n                    } else {\n\n                        this.setState({\n                            result: false,\n                            screen: this.state.screen + button.toString()\n                        });\n\n                    }\n\n                }\n\n            }\n\n        }\n\n    };\n\n    calculate = () => {\n\n        try {\n\n            let string = mCalculate.util.calc(this.state.screen);\n\n            if (isNaN(string)) {\n\n                throw new Error();\n\n            } else {\n\n                this.setState({\n                    result: true,\n                    screen: string.toString(),\n                    story: this.state.screen\n                });\n\n            }\n\n        } catch (e) {\n\n            this.setState({\n                error: true,\n                result: true,\n                screen: \"\"\n            });\n\n        }\n\n    };\n\n    clear = () => {\n\n        this.setState({\n            result: false,\n            error: false,\n            story: \"\",\n            screen: \"\"\n        });\n\n    };\n\n    backspace = () => {\n\n        if (this.state.screen[this.state.screen.length - 1] === ' ') {\n\n            this.setState({\n                result: false,\n                screen: this.state.screen.slice(0, -3)\n            });\n\n        } else if (this.isOperator(this.state.screen[this.state.screen.length - 1])) {\n\n            this.setState({\n                result: false,\n                screen: this.state.screen.slice(0, -2)\n            });\n\n        } else {\n\n            this.setState({\n                result: false,\n                screen: this.state.screen.slice(0, -1)\n            });\n\n        }\n\n    };\n\n    render() {\n\n        let value = this.displayCalc(this.state.screen);\n        let story = this.state.story;\n        let classname = \"screen\";\n\n        if (this.state.error) {\n\n            classname = \"screen error\";\n\n        }\n\n        return (\n            <div className=\"calculator\">\n                <Screen screen={value} story={story} classname={classname}/>\n                <Buttons onClick={this.onClick}/>\n            </div>\n        );\n\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}